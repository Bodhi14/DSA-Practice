        {
            dfs(i+1,j+1,m,n,grid);
        }
        else
        {
            dfs(i+1,j-1,m,n,grid);
        }
    }
    vector<int> findBall(vector<vector<int>>& grid) {
        int m=grid.size();
        if(grid[i][j]==1)
        }
            return;
            ans.push_back(-1);
        if((grid[i][j]==1&&grid[i][j+1]==-1)||(grid[i][j]==-1&&grid[i][j-1]==1))
        {
        }
            ans.push_back(-1);
            return ;
        {
        if((grid[i][j]==1&&j==n-1)||(grid[i][j]==-1&&j==0))
        }
            }
[[1,1,1,-1,-1],[1,1,1,-1,-1],[-1,-1,-1,1,1],[1,1,1,1,-1],[-1,-1,-1,-1,-1]]
